<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Racket on 思泉笔谈 | AI-Life</title>
    <link>https://continuation.cn/tags/racket/</link>
    <description>Recent content in Racket on 思泉笔谈 | AI-Life</description>
    <generator>Hugo -- 0.148.2</generator>
    <language>zh</language>
    <lastBuildDate>Mon, 09 Aug 2021 14:31:04 +0800</lastBuildDate>
    <atom:link href="https://continuation.cn/tags/racket/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>不到60行代码，用Racket实现wc命令</title>
      <link>https://continuation.cn/2021/08/racket-wc/</link>
      <pubDate>Mon, 09 Aug 2021 14:31:04 +0800</pubDate>
      <guid>https://continuation.cn/2021/08/racket-wc/</guid>
      <description>&lt;p&gt;Racket语言开发命令行程序十分简单，而且支持跨平台编译，我们可以用它来开发各种方便的工具程序。下面实现了一个完整的wc程序，只需50多行代码就完成了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>改进Racket的time函数</title>
      <link>https://continuation.cn/2021/07/racket-time-improvement/</link>
      <pubDate>Thu, 22 Jul 2021 11:34:29 +0800</pubDate>
      <guid>https://continuation.cn/2021/07/racket-time-improvement/</guid>
      <description>&lt;p&gt;Racket和Chez Scheme一样都有time函数，用来打印函数的执行时间，所不同的地方在于，Chez Scheme的time函数会把分配的字节数也显示出来，这对于我们调试和优化代码很有帮助，不过Matthew Flatt并没有打算将Racket的time函数添加这一功能，尽管如此，Matthew Flatt提供了一个思路，只是稍微麻烦一些。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Racket 并发与同步</title>
      <link>https://continuation.cn/2021/07/racket-concurrency/</link>
      <pubDate>Thu, 08 Jul 2021 13:47:13 +0800</pubDate>
      <guid>https://continuation.cn/2021/07/racket-concurrency/</guid>
      <description>&lt;h3 id=&#34;threads&#34;&gt;Threads&lt;/h3&gt;
&lt;p&gt;创建一个新线程：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-lisp&#34; data-lang=&#34;lisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(thread (lambda() (displayln &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;This is a new thread&amp;#34;&lt;/span&gt;)))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;休眠线程并且杀掉:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-lisp&#34; data-lang=&#34;lisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(define worker (thread (lambda ()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                         (&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; loop ()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                           (displayln &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Working...&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                           (&lt;span style=&#34;color:#a6e22e&#34;&gt;sleep&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                           (loop)))))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;sleep&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2.5&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(kill-thread worker)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果主线程退出或者被杀掉，其子线程也面临着退出, 可以利用therad-wait来等待其他线程执行完成.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Racket Modules</title>
      <link>https://continuation.cn/2021/07/racket-modules/</link>
      <pubDate>Thu, 08 Jul 2021 11:00:25 +0800</pubDate>
      <guid>https://continuation.cn/2021/07/racket-modules/</guid>
      <description>&lt;h2 id=&#34;模块基础&#34;&gt;模块基础&lt;/h2&gt;
&lt;p&gt;一个模块可以被另一个模块使用，但是模块内部的变量不能直接修改，即set!&lt;/p&gt;
&lt;p&gt;通常，每个Racket模块驻留在自己的文件中，换句话说，可以认为一个.rkt 文件里的内容属于某一个模块，模块名就是文件名。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
